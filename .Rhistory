my_age <- 我的年紀
num1 <- 5
vNum1 <- c(2,5)
vNum2 <- c(2, num1)
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum3 <- c(vNum1,vNum2)
vNum4 <- c(-1,5,2,3)
vNum5 <- c(c(-1,5),c(2,3))
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum4 <- c() # 空向量
vNum3 <- c(vNum2, vNum1)
library(httr)
library(dplyr)
GET("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits") %>%
content() %>%
View()
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum4 <- c() # 空向量
vNum3 <- c(vNum2, vNum1)
vNum4 <- c(vNum4, vNum1) # 向量疊代 （recursive vector concatenate）
library(httr)
library(dplyr)
GET("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits") %>%
content() %>%
View()
library(googlesheets4)
`出席狀況表單網址` <-  # 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
library(googlesheets4)
`出席狀況表單網址` <- 'https://docs.google.com/spreadsheets/d/1oB-5hj1pO5g8FMpZbA7RgIG8NvCRx6WvLPwvleCEV4Q/edit#gid=987577191' # 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
homework_sheet <- sheets_read(ss,sheet=1)
knitr::opts_chunk$set(echo = TRUE)
majors10_factor <- factor(majors10_char)
# 10位學生的主系
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)
class(majors10_char)
majors10_factor <- factor(majors10_char)
# 或
majors10_factor <- factor(
c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
)
typeof(majors10_factor)
class(majors10_factor)
as.integer(majors10_factor)
levels(majors10_factor)
stringInteger <- c("1","2","-11")
class(stringInteger) # 無法進行數值運算
stringInteger+2
trueInteger <- as.integer(stringInteger)
class(trueInteger) # 可以進行數值運算
typeof(trueInteger)
trueInteger+2
studentId <- c(410773002, 410773015)
class(studentId)
as.character(studentId)
studentId <- c(410773002, 410773015)
studentId <- as.character(studentId)
class(studentId)
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
typeof(tpeTime)
as.double(tpeTime)
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",
tz="Europe/Lisbon")
typeof(pgTime)
as.double(pgTime)
with_tz(tpeTime, tzone="UTC")
with_tz(pgTime, tzone="UTC")
studentTime <- c(ymd_hms('2020-03-04T08:15:28Z'),
ymd_hms('2020-03-11 16:11:43',tz="Asia/Taipei"),
ymd_hms('2020-03-11 16:11:43',tz="Asia/Taipei"))
with_tz(studentTime)
studentTime <- c(ymd_hms('2020-03-04T08:15:28Z'),
ymd_hms('2020-03-11 16:11:43',tz="Asia/Taipei"),
ymd_hms('2020-03-11 16:11:43',tz="Asia/Taipei"))
with_tz(studentTime,tzone="UTC")
studentTime <- c(ymd_hms('2020-03-04T08:15:28Z'),
ymd_hms('2020-03-11 16:11:43',tz="Asia/Taipei"),
ymd_hms('2020-03-11 16:11:43',tz="Asia/Taipei"))
studentTime <- c(ymd_hms('2020-03-04T08:15:28Z'),
ymd_hms('2020-03-11 16:11:43',tz="Asia/Taipei"),
ymd_hms('2020-03-11 16:11:43',tz="Asia/Taipei"))
studentTime <- c(ymd_hms('2020-03-04T08:15:28Z'),
ymd_hms('2020-03-11 16:11:43',tz="Asia/Taipei"),
ymd_hms('2020-03-11 16:11:43',tz="Asia/Taipei"))
studentTime
knitr::opts_chunk$set(echo = TRUE)
# vector
C("2020-03-31T13:40:55Z","一芳","2","水果茶")
# vector
c("2020-03-31T13:40:55Z","一芳","2","水果茶")
# vector
c("2020-03-31T13:40:55Z","一芳","2","水果茶")
# list
library(lubridate)
list(
ymd_hms("2020-03-31T13:40:55Z"),
"一芳",
2,
"水果茶")
# vector
c("2020-03-31T13:40:55Z","一芳","2","水果茶")
# list
library(lubridate)
list(
ymd_hms("2020-03-31T13:40:55Z"),
"一芳",
2,
"水果茶")
# vector
c("2020-03-31T13:40:55Z","一芳","2","水果茶")
# list
library(lubridate)
`小明交易1` <- list(
ymd_hms("2020-03-31T13:40:55Z"), # Date/Time class
"一芳", # character
2, # numeric
"水果茶" # character
)
print(`小明交易1`)
View(小明交易1)
View(小明交易1)
# list含兩個vectors
`小明108學年課表A` <- list(
c("108-1","高級會計學","高等統計學"),
c("108-2","食在拉丁美洲")
)
print(`小明108學年課表A`)
View(小明108學年課表A)
# list含兩個lists
`小明108學年課表B` <- list(
list("108-1","高級會計學","高等統計學"),
list("108-2","食在拉丁美洲")
)
print(`小明108學年課表B`)
View(小明108學年課表B)
View(小明108學年課表A)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
View(小明108學年課表C)
View(小明108學年課表B)
`小明108學年課表Ｄ` <- list(
`上學期`=list(
`semester`=c("108-1"),
`courses`=c("高級會計學","高等統計學")
),
`下學期`=list(
`semester`=c("108-2"),
`courses`=c("食在拉丁美洲")
)
)
print(`小明108學年課表Ｄ`)
commit <- list(
author = list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z")
),
committer = list(
"emilyluckey",
"emily007@gmail.com",
ymd_hms("2020-03-26T08:18:40Z")
),
messege = "update"
)
print(commit)
commit <- list(
author = list(
"Martin老師",
"mtlin@gm.ntpu.edu.tw",
ymd_hms("2020-03-25T07:17:40Z")
),
committer = list(
"emilyluckey",
"emily007@gmail.com",
ymd_hms("2020-03-26T08:18:40Z")
),
message = "update"
)
print(commit)
commit <- list(
author = list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
),
committer = list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
),
message = "update"
)
print(commit)
library(jsonlite)
library(jsonlite)
tojson(commit)
library(jsonlite)
toJSON(commit)
library(jsonlite)
fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
View(weather_next36hours)
save(commit,file = "today.Rda")
load("today.Rda")
library(lubridate)
weatherforecast <- list(
taipeicity = list(
date = ymd("2020-03-31","2020-04-01"),
highesttemperature = 25,
lowesttemperature = 18
),
newtaipeicity = list(
date = ymd("2020-03-31","2020-04-01"),
highesttemperature = 24,
lowesttemperature = 15
)
)
print(weatherforecast)
View(weatherforecast)
library(lubridate)
weatherforecast <- list(
taipeicity = list(
date = list(today=ymd("2020-03-31"),
tommorow=ymd("2020-04-01")
),
highesttemperature = 25,
lowesttemperature = 18
),
newtaipeicity = list(
date = list(today=ymd("2020-03-31"),
tommorow=ymd("2020-04-01")
),
highesttemperature = 24,
lowesttemperature = 15
)
)
print(weatherforecast)
View(weatherforecast)
knitr::opts_chunk$set(echo = TRUE)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample[[1]]
vectorExample[[3]]
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
tainanSportsMap[[1]]
tainanSportsMap[[1076]]
names(listExample)
names(listExample)
listExample$student
listExample$學期
str(listExample$學期)
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
newTaipeiCityVaccine[["result"]]
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2),max.level=1])
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)],max.level = 1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)],max.level = 1)
# listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(2,1)],max.level = 1)
# listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(2,2)],max.level = 1)
# listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(2,1)],max.level = 1)
# listExample[c(1,2)]
str(tainanSportsMap[c(46,28,100,259,1023)],max.level = 1)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
View(taipeiNightMarkets)
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
taipeiNightMarkets[c(5,14,9)]
names(taipeiNightMarkets)
names(taipeiNightMarkets)
taipeiNightMarkets[C(T,F,F,F,T,F,F,F,F,T,F,F,F,T)]
names(taipeiNightMarkets)
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)]
names(taipeiNightMarkets)
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)],max.level = 1)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T) -> selectedMarkets
taipeiNightMarkets[selectedMarkets]
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)],max.level = 1)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
str(taipeiNightMarkets[selectedMarkets],max.level = 1)
get1 <- listExample[["學期"]]
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
str(get1)
get2 <- listExample["學期"]
str(get2)
get1 <- listExample[["學期"]]
str(get1,max.level = 1)
get2 <- listExample["學期"]
str(get2,max.level = 1)
get2 <- listExample["學期"]
str(get2,max.level = 1)
str(get2,max.level = 2)
numVector <- c(2,3,6,-1,4,2,6)
select1 <- numVector[c(1,4)]; select1
select2 <- select1[[1]]; select2
# 相當於
numVector[c(1,4)][[1]]
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2
# 相當於
numVector[c(T,T,F,T,F,F,T)][c(1,4)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[T,T,F,F,T]
econOnly <- majors[c(T,T,F,F,T)]
econOnly <- c(T,T,F,F,T)
names[econOnly]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- gender[econOnly][c(T,T,F)]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- gender[econOnly][c(T,T,F)]
econFemaleOnly
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- gender[econOnly][c(T,T,F)]
names[econFemaleOnly]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- gender[econOnly][c(T,T,F)]
names[econFemaleOnly]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- c(T,T,F)
names[econFemaleOnly]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- c(T,T,F)
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- c(T,T,F)
names[econOnly][econFemaleOnly]
