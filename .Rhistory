tommorow=ymd("2020-04-01")
),
highesttemperature = 24,
lowesttemperature = 15
)
)
print(weatherforecast)
View(weatherforecast)
knitr::opts_chunk$set(echo = TRUE)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample[[1]]
vectorExample[[3]]
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
tainanSportsMap[[1]]
tainanSportsMap[[1076]]
names(listExample)
names(listExample)
listExample$student
listExample$學期
str(listExample$學期)
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
newTaipeiCityVaccine[["result"]]
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2),max.level=1])
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)],max.level = 1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)],max.level = 1)
# listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(2,1)],max.level = 1)
# listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(2,2)],max.level = 1)
# listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(2,1)],max.level = 1)
# listExample[c(1,2)]
str(tainanSportsMap[c(46,28,100,259,1023)],max.level = 1)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
View(taipeiNightMarkets)
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
taipeiNightMarkets[c(5,14,9)]
names(taipeiNightMarkets)
names(taipeiNightMarkets)
taipeiNightMarkets[C(T,F,F,F,T,F,F,F,F,T,F,F,F,T)]
names(taipeiNightMarkets)
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)]
names(taipeiNightMarkets)
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)],max.level = 1)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T) -> selectedMarkets
taipeiNightMarkets[selectedMarkets]
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)],max.level = 1)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
# 補充
selectedMarkets <- rep(F,14) #repeat
print(selectedMarkets)
selectedMarkets[c(1,5,10,14)] <- T
print(selectedMarkets)
str(taipeiNightMarkets[selectedMarkets],max.level = 1)
get1 <- listExample[["學期"]]
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
str(get1)
get2 <- listExample["學期"]
str(get2)
get1 <- listExample[["學期"]]
str(get1,max.level = 1)
get2 <- listExample["學期"]
str(get2,max.level = 1)
get2 <- listExample["學期"]
str(get2,max.level = 1)
str(get2,max.level = 2)
numVector <- c(2,3,6,-1,4,2,6)
select1 <- numVector[c(1,4)]; select1
select2 <- select1[[1]]; select2
# 相當於
numVector[c(1,4)][[1]]
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2
# 相當於
numVector[c(T,T,F,T,F,F,T)][c(1,4)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[T,T,F,F,T]
econOnly <- majors[c(T,T,F,F,T)]
econOnly <- c(T,T,F,F,T)
names[econOnly]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- gender[econOnly][c(T,T,F)]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- gender[econOnly][c(T,T,F)]
econFemaleOnly
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- gender[econOnly][c(T,T,F)]
names[econFemaleOnly]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- gender[econOnly][c(T,T,F)]
names[econFemaleOnly]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- c(T,T,F)
names[econFemaleOnly]
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- c(T,T,F)
names[econOnly][econFemaleOnly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- c(T,T,F,F,T)
names[econOnly]
gender[econOnly]
econFemaleOnly <- c(T,T,F)
names[econOnly][econFemaleOnly]
knitr::opts_chunk$set(echo = TRUE)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# get1
get1$"108-1" -> get1_layer1
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
# get1
get1$"108-1" -> get1_layer1
get1_layer1[[1]] -> get1_layer2
get1_layer2$"teacher"
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
get1$`108-1`[[1]]$teacher
# get1
get1$"108-1" -> get1_layer1
get1_layer1[[1]] -> get1_layer2
get1_layer2$teacher
# get2
get2[[1]] -> get2_layer1
# get2
get2[[1]] -> get2_layer1
get2_layer1$`108-1` -> get2_layer2
get2_layer2[[1]] -> get2_layer3
get2_layer3$teacher
listExample["學期"][["學期"]]$`108-1`[[1]]$teacher
today <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
tomorrow <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
weather <- list(today,tomorrow)
print(weather)
weather[[1]][[2]][[2]] # 今天/新北市/highest_temp
weather[[2]][[2]][[2]] # 明天/新北市/highest_temp
weather[[1]][[2]][[2]] # 今天/新北市/highest_temp
weather[[2]][[2]][[2]] # 明天/新北市/highest_temp
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在: 替換
a[[4]] <- "7" # 元素不存在： 增加
a[c(5,6)] <- c("J", "K")
a
a[[7]] <- "Johnson"
a[[7]] <- "Johnson"
a[[7]] <- "Johnson"
a
a[[7]] <- "Johnson"
a
a <- c(a,"Mary")
a[[7]] <- "Johnson"
a
a <- c(a,"Mary")
a
a[[7]] <- "Johnson"
a
a <- c(a,c("Mary"))
a
a[[7]] <- "Johnson"
a
a <- c(a,c("Mary"))
a
a[[7]] <- "Johnson"
a
a <- c(a,c("Mary"))
a
a[[7]] <- "Johnson"
a
a <- c(a,c("Mary"))
a
a[[7]] <- "Johnson"
a
a <- c(a,c("Mary"))
a
a[[7]] <- "Johnson"
a[[7]] <- "Johnson"
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在: 替換
a[[4]] <- "7" # 元素不存在： 增加
a[c(5,6)] <- c("J", "K")
a
a[[7]] <- "Johnson"
a
a <- c(a,c("Mary"))
a
library(lubridate)
list1 <-
list(
list(
name="Jack",
birthday=ymd("1998-03-21"),
status=c(height=177, weight=80)
)
)
str(list1)
# 更改日期
list1[[1]]$birthday <- ymd("1997-03-21")
# 新增資料
list1[[2]] <- list(
name="Mary",
birthday=ymd("1998-08-24")
)
str(list1)
library(lubridate)
list1 <-
list(
list(
name="Jack",
birthday=ymd("1998-03-21"),
status=c(height=177, weight=80)
)
)
str(list1)
list1[[2]]$status <- c(height=163, weight=45)
list1[[2]]$status <- c(height=163, weight=45)
# 更改日期
list1[[1]]$birthday <- ymd("1997-03-21")
# 新增資料
list1[[2]] <- list(
name="Mary",
birthday=ymd("1998-08-24")
)
str(list1)
list1[[2]]$status <- c(height=163, weight=45)
list1[[1]]$status[["height"]] <- 176
str(list1)
list1[[1]][["age"]] <- 21
list1[[2]]["age"] <- list(21)
# 改變「一個」時，使用[[ ]]比較不會錯。
str(list1)
list1[[1]][c("bloodType","registered")] <- list("AB",TRUE)
str(list1)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[2]][[1]][[2]] <- list(name="產業經濟學")
View(listExample)
listExample[[2]][[1]][[2]][c("teacher","grade")] <- list("Wen",
88)
View(listExample)
print(a)
a[-c(1,3)]
a[c(-2)]
print(a)
a[-c(1,3)] -> a # 要回存才算真的刪除
print(a)
a[-c(1,3)]
a[c(-2)]
print(a)
a[-c(1,3)] -> a # 要回存才算真的刪除
library(lubridate)
list1 <-
list(
list(
name="Jack",
birthday=ymd("1998-03-21"),
status=c(height=177, weight=80)
),
list(
name="Mary",
birthday=ymd("1998-08-24"),
status=c(height=163, weight=45),
age=21,
bloodType="AB"
)
)
str(list1)
list1[[1]][[-3]]
list1[[1]][-3]
list1[[1]][-3] -> list1[[1]]
list1[[1]][-3] -> list1[[1]]
list1[[2]][-c(3,5)]
list1[[1]][-3] -> list1[[1]]
list1[[2]][-c(3,5)] -> list1[[2]]
View(list1)
library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC?$format=json", simplifyDataFrame = F) -> newTaipeiYouBike
View(newTaipeiYouBike)
#方法一
newTaipeiYouBike[[34]][-c(2,9)] -> newTaipeiYouBike[[34]]
View(newTaipeiYouBike)
#方法一
newTaipeiYouBike[[34]][-c(2,9)] -> newTaipeiYouBike[[34]]
#方法二
newTaipeiYouBike[[11]][c(4,11)] -> NULL
#方法一
newTaipeiYouBike[[34]][-c(2,9)] -> newTaipeiYouBike[[34]]
#方法二
newTaipeiYouBike[[11]][c(4,11)] <- NULL
View(newTaipeiYouBike)
